@model Recipe


@{
    ViewBag.Title = "Upload Recipe";
    ViewBag.TitleHeader = "Upload Recipe";
    ViewBag.SubHeader = "";
    Layout = "~/Views/Shared/_StandardLayout.cshtml";

    string a = "active";
    string ia = string.Empty;

    Session["HomeActive"] = ia;
    Session["UploadActive"] = a;
    Session["CartActive"] = ia;
    Session["ProfileActive"] = ia;

    var userPremium = Session["UserPremium"] as UserPremium;
}

<!-- Favicon -->
<link href="~/Content/MainTemplate/img/favicon.ico" rel="icon">

<!-- Google Font -->
<link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400|Nunito:600,700" rel="stylesheet">

<!-- CSS Libraries -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
<link href="~/Content/MainTemplate/lib/animate/animate.min.css" rel="stylesheet">
<link href="~/Content/MainTemplate/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
<link href="~/Content/MainTemplate/lib/flaticon/font/flaticon.css" rel="stylesheet">
<link href="~/Content/MainTemplate/lib/tempusdominus/css/tempusdominus-bootstrap-4.min.css" rel="stylesheet" />

<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Wano Quin:wght@900&display=swap" />
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Blinker:wght@300;400;700&display=swap" />

<!-- Template Stylesheet -->
<link href="~/Content/bootstrap-5.3.3-dist/css/bootstrap.css" rel="stylesheet" />
<link href="~/Content/MainTemplate/css/style.css" rel="stylesheet">


@using (Html.BeginForm("UploadRecipe", "UsersPage", FormMethod.Post, new { enctype = "multipart/form-data" })) {
@*<form id="uploadRecipeForm">*@
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Upload Recipe</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model =>  model.RecipeName, "Recipe Name", htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.RecipeName, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.RecipeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipeDescription, "Recipe Description", htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.TextAreaFor(model => model.RecipeDescription, new { @class = "form-control", @rows = 4, @cols = 100, @required = "true" })
                @Html.ValidationMessageFor(model => model.RecipeDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreparationTime, "Preparation Time (hours:minutes:seconds)", htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.PreparationTime, new { htmlAttributes = new { @class = "form-control", @placeholder = "ex. 24:60:60", @required = "true" } })
                @Html.ValidationMessageFor(model => model.PreparationTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CookingDuration, "Cooking Duration (hours:minutes:seconds)", htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.CookingDuration, new { htmlAttributes = new { @class = "form-control", @placeholder = "ex. 24:60:60", @required = "true" } })
                @Html.ValidationMessageFor(model => model.CookingDuration, "", new { @class = "text-danger" })

            </div>
        </div>

        @*@Html.Label("Ingredients", new { @class = "control-label col-md-12" })*@
        <label class="control-label col-md-12" style="display:block;">Ingredients</label>
        <div id="ingredients-container">
            <div class="form-group ingredient-row" style="display: block;">
                <div class="row" style="margin:0">
                    <div class="col-md-3 ingname">
                        <input class="form-control ingredient-name" placeholder="Ingredient Name" id="ingredientName" name="ingredientName[]" required />
                    </div>
                    <div class="col-md-3 ingqty">
                        <input class="form-control ingredient-quantity" placeholder="Quantity" type="number" step="any" min="0" id="ingredientQty" name="ingredientQty[]" required />
                    </div>
                    <div class="col-md-3 ingunit">
                        <div>
                            @{
                                var listOfUnitMeasures = new[]
                                {
                                new SelectListItem { Value = "tbsp", Text = "Tablespoon (tbsp)" },
                                new SelectListItem { Value = "tsp", Text = "Teaspoon (tsp)" },
                                new SelectListItem { Value = "minced", Text = "Minced" },
                                new SelectListItem { Value = "c", Text = "Cup (c)" },
                                new SelectListItem { Value = "fl oz", Text = "Fluid Ounce (fl oz)" },
                                new SelectListItem { Value = "pt", Text = "Pint (pt)" },
                                new SelectListItem { Value = "qt", Text = "Quart (qt)" },
                                new SelectListItem { Value = "gal", Text = "Gallon (gal)" },
                                new SelectListItem { Value = "ml", Text = "Milliliter (ml)"},
                                new SelectListItem { Value = "L", Text = "Liter (L)" },
                                new SelectListItem { Value = "g", Text = "Gram (g)" },
                                new SelectListItem { Value = "kg", Text = "Kilogram (kg)" },
                                new SelectListItem { Value = "lb", Text = "Pound (lb)" },
                                new SelectListItem { Value = "oz", Text = "Ounce (oz)" },
                                new SelectListItem { Value = "in", Text = "Inch (in)" },
                                new SelectListItem { Value = "cm", Text = "Centimeter (cm)" },
                                new SelectListItem { Value = "dash", Text = "Dash" },
                                new SelectListItem { Value = "pinch", Text = "Pinch" },
                                new SelectListItem { Value = "smidgen", Text = "Smidgen" },
                                new SelectListItem { Value = "drop", Text = "Drop" },
                                new SelectListItem { Value = "handful", Text = "Handful" },
                                new SelectListItem { Value = "sprig", Text = "Sprig" },
                                new SelectListItem { Value = "bunch", Text = "Bunch" },
                                new SelectListItem { Value = "clove", Text = "Clove" },
                                new SelectListItem { Value = "slice", Text = "Slice" },
                                new SelectListItem { Value = "fillet", Text = "Fillet" },
                                new SelectListItem { Value = "whole", Text = "Whole" },
                                new SelectListItem { Value = "head", Text = "Head" },
                                new SelectListItem { Value = "bulb", Text = "Bulb" },
                                new SelectListItem { Value = "stalk", Text = "Stalk" },
                                new SelectListItem { Value = "leaf", Text = "Leaf" },
                                new SelectListItem { Value = "zest", Text = "Zest" },
                                new SelectListItem { Value = "peel", Text = "Peel" },
                                new SelectListItem { Value = "grind", Text = "Grind" },
                                new SelectListItem { Value = "crushed", Text = "Crushed" },
                                new SelectListItem { Value = "diced", Text = "Diced" }
                            };
                                listOfUnitMeasures = listOfUnitMeasures.OrderBy(list => list.Text).ToArray();

                                //most
                                var unitMeasurementPlaceholder = "ml";
                            }
                        </div><!--list of measurements-->
                        <select class="form-control ingredient-unit" id="ingredientUnit" name="ingredientUnit[]" required>
                            @foreach (var item in @listOfUnitMeasures)
                            {
                                if (item.Value != unitMeasurementPlaceholder)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                                else
                                {
                                    <option selected value="@item.Value">@item.Text</option>
                                }
                            }
                        </select>
                    </div>

                    <div class="col-md-3">
                        <button class="btn btn-danger remove-ingredient">Remove</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <button class="btn btn-success" id="add-ingredient">Add Ingredient</button>
            </div>
        </div>

        <div>
            <input type="hidden" id="ingcount" name="ingcount" value="0" />
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CookingInstruction, "Cooking Instruction (start with step number then dot, then end with ./) EXAMPLE: 1. instructions./ 2. instrucions./", htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.TextAreaFor(model => model.CookingInstruction, new { @class = "form-control", @rows = 10, @cols = 100 })
                @Html.ValidationMessageFor(model => model.CookingInstruction, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="moodid" class="control-label col-md-12">Mood Tag</label>
            <div class="col-md-12">
                <select id="moodid" name="moodid" class="form-control">
                    <option value="1">Happy</option>
                    <option value="2">Sad</option>
                    <option value="3">Angry</option>
                    <option value="4">Disgusted</option>
                    <option value="5">Fearful</option>
                    <option value="6">Surprised</option>
                    <option value="1002">Euthymia</option>
                </select>
                <span class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label for="imageFile" class="control-label col-md-12">Upload Recipes Cover Picture</label>
            <div class="col-md-12">
                <input type="file" name="imageFile" id="imageInput" accept="image/*" required />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <img id="selectedImage" src="#" alt="Selected Image" style="display: none; max-width: 300px; max-height: 300px;" />
            </div>
        </div>

        @* if not null then user is premium holder *@
        @if (userPremium != null)
        {
            <div class="form-group col-md-12">
                <label>Do you want to sell this recipe?</label>
                <label>Yes</label>
                <input type="radio" name="forsale" value="Yes" />
                <label>No</label>
                <input type="radio" checked name="forsale" value="No" />
            </div>

            <div class="saleoption" id="saleoption" style="display:none">
                <div class="form-group">
                    <label class="control-label col-md-12">Price</label>
                    <div class="col-md-12">
                        <input style="width:50%" class="form-control ingredient-quantity" placeholder="P00.00" type="number" step="any" min="0" id="price" name="price" />
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-12">Shipped from</label>
                    <div class="col-md-12">
                        <input class="form-control ingredient-quantity" placeholder="Address" type="text" id="shippedfrom" name="shippedfrom" />
                    </div>
                </div>
            </div>
        }
        

        <div class="form-group" style="margin-top:3rem">
            <div class="col-md-offset-2 col-md-12">
                <button class="btn custom-btn" id="upload-recipe-btn" type="submit" style="width:100%">Upload Recipe</button>
            </div>
        </div>
    </div>
@*</form>*@
}

<!-- JavaScript Libraries -->
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
<script src="~/Content/MainTemplate/lib/easing/easing.min.js"></script>
<script src="~/Content/MainTemplate/lib/owlcarousel/owl.carousel.min.js"></script>
<script src="~/Content/MainTemplate/lib/tempusdominus/js/moment.min.js"></script>
<script src="~/Content/MainTemplate/lib/tempusdominus/js/moment-timezone.min.js"></script>
<script src="~/Content/MainTemplate/lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>

<!-- Contact Javascript File -->
<script src="~/Content/MainTemplate/mail/jqBootstrapValidation.min.js"></script>
<script src="~/Content/MainTemplate/mail/contact.js"></script>

<!-- Template Javascript -->
<script src="~/Content/MainTemplate/js/main.js"></script>
<script src="~/Content/bootstrap-5.3.3-dist/js/bootstrap.js"></script>

<script>
    var ingredientCount = 1;

    document.getElementById('imageInput').addEventListener('change', function (event) {
        var input = event.target;
        var reader = new FileReader();

        reader.onload = function () {
            var imgElement = document.getElementById('selectedImage');
            imgElement.src = reader.result;
            imgElement.style.display = 'block';
        };

        if (input.files && input.files[0]) {
            reader.readAsDataURL(input.files[0]);
        }
    });

    $(document).ready(function () {
        // Add ingredient row
        $("#add-ingredient").click(function (e) {
            e.preventDefault();
            var container = $("#ingredients-container");
            var templateRow = container.find(".ingredient-row").first().clone();
            var newRow = templateRow.clone().show(); // Clone the template row and show it
            newRow.find("input").val(""); // Clear input values

            //newRow.find("input").prop("disabled", false);
            //newRow.find("select").prop("disabled", false);

            container.append(newRow);
            ingredientCount++;

            document.getElementById('ingcount').value = String(ingredientCount);

            //container.find(".ingredient-row").not(newRow).find("input").prop("disabled", true);
            //container.find(".ingredient-row").not(newRow).find("select").prop("disabled", true);
        });

        // Remove ingredient row
        $(document).on("click", ".remove-ingredient", function (e) {
            e.preventDefault();
            var row = $(this).closest(".ingredient-row");
            row.remove();

            ingredientCount--;
            document.getElementById('ingcount').value = String(ingredientCount);
        });
    });

    document.querySelectorAll('input[name="forsale"]').forEach(function (radio) {
        radio.addEventListener('change', function () {
            var saleOptionDiv = document.getElementById('saleoption');
            if (this.value === 'Yes') {
                saleOptionDiv.style.display = 'block';
                document.getElementById('price').setAttribute('required', 'required');
                document.getElementById('shippedfrom').setAttribute('required', 'required')
            } else {
                saleOptionDiv.style.display = 'none';
                document.getElementById('price').removeAttribute('required');
                document.getElementById('shippedfrom').removeAttribute('required')
            }
        });
    });

    @*$(document).ready(function () {
        $('#upload-recipe-btn').click(function (e) {
            alert("before");

            e.preventDefault();
            alert("after");

            var uploadRecipeFormData = new FormData($("#uploadRecipeForm")[0]);
            uploadRecipeFormData.append("ingcount", ingredientCount);
            uploadRecipeFormData.append("moodid", $('#moodid').val);

            //$('input[name="ingredientName[]"]').each(function () {
            //    uploadRecipeFormData.append("ingredientName[]", $(this).val());
            //});

            //$('input[name="ingredientQty[]"]').each(function () {
            //    var value = parseFloat($(this).val());
            //    uploadRecipeFormData.append("ingredientQty[]", value);
            //});

            //$('input[name="ingredientUnit[]"]').each(function () {
            //    uploadRecipeFormData.append("ingredientUnit[]", $(this).val());
            //});

            if (parseFloat($('#price').val) > 0 && $('#shippedfrom').val != "") {
                uploadRecipeFormData.append("price", parseFloat($('#price').val));
                uploadRecipeFormData.append("shippedfrom", $('#shippedfrom').val);
            } else {
                uploadRecipeFormData.append("price", 0);
                uploadRecipeFormData.append("shippedfrom", "");
            }

            
            $.ajax({
                type: 'POST',
                url: '@Url.Action("UploadRecipe", "UsersPage")',
                data: uploadRecipeFormData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        alert(response.message);
                        window.location.href = '@Url.Action("UsersHome", "UsersPage")'
                    } else {
                        alert(response.message);
                        window.location.reload();
                    }
                },
                error: function (xhr, status, error) {
                    alert("An error occurred: " + error);
                }
            });
        });
    });*@
</script>